// Generated by CoffeeScript 1.11.1
var error, file, fs, listen, net, server, serverOptions, values;

fs = require('fs');

net = require('net');

process.title = 'file-provider';

values = require('nuc')({
  id: 'file-provider',
  defaults: {
    port: 34543
  }
});

try {
  file = fs.readFileSync(values.filePath);
} catch (error1) {
  error = error1;
  console.error('Unable to read file from', values.filePath);
  console.error(' Error:', error.message);
  process.exit(1);
}

server = net.createServer(function(socket) {
  socket.on('error', function(error) {
    console.error('Client error:', error);
    return socket.destroy();
  });
  return socket.end(file, 'binary');
});

serverOptions = {
  port: values.port
};

if (values.host != null) {
  serverOptions.host = values.host;
}

server.inUseRetryCount = 0;

listen = function() {
  return server.listen(serverOptions, function(socket) {
    console.log('Server:');
    console.log('  Providing file:', values.filePath);
    return console.log('  Listening on', server.address());
  });
};

server.on('error', function(error) {
  if (error.code === 'EADDRINUSE') {
    if (server.inUseRetryCount < 3) {
      console.log('Address in use, retrying in 3 seconds...');
      server.inUseRetryCount++;
      return setTimeout((function() {
        server.close();
        return listen();
      }), 3000);
    } else {
      console.error("Address in use. Exiting after " + server.inUseRetryCount + " retries.");
      return server.close();
    }
  } else {
    console.error('Server error:', error.message);
    return server.close();
  }
});

listen();
